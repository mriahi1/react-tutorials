{"version":3,"sources":["tictac.js","Table.js","Form.js","chart.js","TaskApp.js","Api.js","index.js"],"names":["Square","props","className","onClick","value","Board","i","this","squares","renderSquare","React","Component","calculateWinner","lines","length","a","b","c","Game","state","history","Array","fill","xIsNext","stepNumber","slice","setState","concat","step","status","current","winner","moves","map","move","description","jumpTo","handleClick","TableHeader","TableBody","rows","taskData","row","index","title","completeTask","removeTask","Table","Form","initialState","handleChange","event","target","name","submitForm","handleSubmit","htmlFor","type","id","onChange","BarChart","data","x","y","todo_count","incomplete_task_count","label","complete_task_count","xType","width","height","color","App","tasks","filter","obj","task","Api","fetch","then","result","json","entry","href","MainApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6c653751.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './tictac.css';\n\n\n// class Square extends React.Component {\n//     render() {\n//         return (\n//             <button \n//                 className=\"square\"\n//                 onClick={() => this.props.onClick()}\n//             >\n//                 {this.props.value}\n//             </button>\n//         );\n//     }\n// }\n\nfunction Square(props) {\n    return (\n        <button className=\"square\" onClick={props.onClick}>\n            {props.value}\n        </button>\n    );\n}\n\nclass Board extends React.Component {\n    renderSquare(i) {\n        return (\n            <Square \n                value={this.props.squares[i]} \n                onClick={() => this.props.onClick(i)}\n            />\n        );\n    }\n\n    render() {\n        return (\n          <div>\n            <div className=\"board-row\">\n              {this.renderSquare(0)}\n              {this.renderSquare(1)}\n              {this.renderSquare(2)}\n            </div>\n            <div className=\"board-row\">\n              {this.renderSquare(3)}\n              {this.renderSquare(4)}\n              {this.renderSquare(5)}\n            </div>\n            <div className=\"board-row\">\n              {this.renderSquare(6)}\n              {this.renderSquare(7)}\n              {this.renderSquare(8)}\n            </div>\n          </div>\n        );\n    }\n}\n\nclass Game extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            history: [{\n                squares: Array(9).fill(null),\n            }],\n            xIsNext: true,\n            stepNumber: 0,\n        };\n    }\n\n    handleClick(i) {\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\n        const current = history[history.length - 1];\n        const squares = current.squares.slice();\n        if (calculateWinner(squares) || squares[i]) {\n            return;\n        }\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\n        this.setState({\n            history: history.concat([{squares: squares}]),\n            xIsNext: !this.state.xIsNext,\n            stepNumber: history.length,\n        });\n    }\n\n    jumpTo(step) {\n        this.setState({\n            stepNumber: step,\n            xIsNext: (step % 2) === 0,\n        })\n    }\n\n    render() {\n        const history = this.state.history;\n        const current = history[this.state.stepNumber];\n        const winner = calculateWinner(current.squares);\n\n        const moves = history.map((step, move) => {\n            const description = move ?\n                'Go to move #' + move :\n                'Go to game start';\n            return (\n                <li key={move}>\n                    <button onClick={() => this.jumpTo(move)}>{description}</button>\n                </li>\n            )\n        });\n\n        let status;\n        if (winner) {\n            status = 'Winner ' + winner;\n        } else {\n            status = 'Next player: ' + (this.state.xIsNext ? 'X': 'O');\n        }\n        return (\n            <div className=\"game\">\n                <div className=\"game-board\">\n                    <Board \n                        squares={current.squares}\n                        onClick={(i) => this.handleClick(i)}\n                    />\n                </div>\n                <div className=\"game-info\">\n                    <div>{status}</div>\n                    <ol>{moves}</ol>\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n\nexport default Game\n","import React, {Component} from 'react'\nimport './table.css';\n\n\nconst TableHeader = () => {\n    return (\n      <thead>\n        <tr>\n          <th>Title</th>\n          <th>Status</th>\n          <th>Actions</th>\n        </tr>\n      </thead>\n    )\n}\n\nconst TableBody = (props) => {\n    const rows = props.taskData.map((row, index) => {\n    return (\n        <tr key={index}>\n          <td>{row.title}</td>\n          <td>{row.status ? \"TODO\" : \"COMPLETE\"}</td>\n          <td>\n                <button onClick={() => props.completeTask(index)}>Check</button>\n                <button onClick={() => props.removeTask(index)}>Delete</button>\n          </td>\n        </tr>\n      )\n    })\n    return (\n      <tbody>{rows}</tbody>\n    )\n}\n\nconst Table = (props) =>  {\n    const {taskData, removeTask, completeTask} = props\n\n    if (taskData.length === 0) {\n        return (\n            <div className=\"table-container\">\n                <h2>No tasks yet</h2>\n                <h4>Add first task</h4>\n            </div>\n        )\n    }\n    return (\n        <div className=\"table-container\">\n          <table>\n            <TableHeader />\n            <TableBody\n                taskData={taskData}\n                removeTask={removeTask}\n                completeTask={completeTask}\n            />\n          </table>\n        </div>\n    )\n}\n\nexport default Table\n","import React, {Component} from 'react'\n\n\nclass Form extends Component {\n    initialState = {\n      title: '',\n      status: true,\n    }\n    \n    state = this.initialState\n\n    handleChange = (event) => {\n      const {name, value} = event.target\n      this.setState({\n        [name]: value,\n      })\n    }\n\n    submitForm = () => {\n      this.props.handleSubmit(this.state)\n      this.setState(this.initialState)\n    }\n\n    render() {\n      const { title } = this.state;\n    \n      return (\n        <div className=\"form-container\">\n            <h2>Add Task</h2>\n            <form>\n                <label htmlFor=\"title\">Title</label>\n                <br />\n                <input\n                  type=\"text\"\n                  name=\"title\"\n                  id=\"title\"\n                  value={title}\n                  onChange={this.handleChange} />\n                <br />\n                <br />\n                \n                <input type=\"button\" value=\"Submit\" onClick={this.submitForm} />\n            </form>\n        </div>\n      );\n    }\n}\n\nexport default Form;","import React, { Component } from 'react';\nimport '../node_modules/react-vis/dist/style.css';\nimport {XYPlot, XAxis, YAxis, HorizontalGridLines, VerticalBarSeries} from 'react-vis';\n\n\nclass BarChart extends Component {\n  render() {\n    const data = [\n        {x: \"NOT DONE\", y: this.props.todo_count.incomplete_task_count, label: \"NOT DONE\"},\n        {x: \"DONE\", y: this.props.todo_count.complete_task_count, label: \"DONE\"}\n    ]\n    return (\n      <div className=\"chart\">\n        <XYPlot\n            xType=\"ordinal\"\n            width={300}\n            height={300}>\n          <HorizontalGridLines />\n          <VerticalBarSeries\n            color=\"blue\"\n            data={data}/>\n        \n            <YAxis />\n           <XAxis />\n        </XYPlot>\n      </div>\n    );\n  }\n}\n\nexport default BarChart;","import React, {Component} from 'react';\nimport Table from './Table'\nimport Form from './Form'\nimport './TaskApp.css';\nimport BarChart from './chart'\n\n\nclass App extends React.Component {\n    state = {\n        tasks: [],\n        incomplete_task_count: 0,\n        complete_task_count: 0,\n    }\n\n    removeTask =(index) => {\n        const {tasks} = this.state\n\n        this.setState({\n            incomplete_task_count: tasks.filter((obj) => obj.status === true).length,\n            complete_task_count: tasks.filter((obj) => obj.status === false).length,\n            tasks: tasks.filter((task, i) => {\n                return i !== index\n            }),\n        })\n    }\n\n    completeTask =(index) => {\n        const {tasks} = this.state\n        tasks[index].status = !tasks[index].status\n        this.setState({\n            tasks: tasks,\n            incomplete_task_count: tasks.filter((obj) => obj.status === true).length,\n            complete_task_count: tasks.filter((obj) => obj.status === false).length,\n        })\n    }\n\n    handleSubmit = (task) => {\n        const tasks = [...this.state.tasks, task]\n        this.setState({\n            tasks: tasks,\n            incomplete_task_count: tasks.filter((obj) => obj.status === true).length,\n            complete_task_count: tasks.filter((obj) => obj.status === false).length,\n        })\n    }\n\n    render() {\n        return (\n\n            <div className=\"container\">\n                <BarChart todo_count={this.state} />\n                <Form handleSubmit={this.handleSubmit} />\n\n                <Table\n                    taskData={this.state.tasks}\n                    removeTask={this.removeTask}\n                    completeTask={this.completeTask}\n                />\n                \n            </div>\n        )\n    }\n}\n\nexport default App\n","import React, {Component} from 'react'\n\nclass Api extends Component {\n  state = {\n    data: [],\n  }\n\n  // Code is invoked after the component is mounted/inserted into the DOM tree.\n  componentDidMount() {\n    const url =\n      'https://en.wikipedia.org/w/api.php?action=opensearch&search=reactjs&format=json&origin=*'\n\n    fetch(url)\n      .then((result) => result.json())\n      .then((result) => {\n        this.setState({\n          data: result,\n        })\n      })\n  }\n\n  render() {\n    const {data} = this.state\n\n    const result = data.map((entry, index) => {\n      return <li key={index}><a href=\"{entry}\">{entry}</a></li>\n    })\n\n    return <ul>{result}</ul>\n  }\n}\n\nexport default Api\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport './tictac.js';\nimport Game from './tictac'\nimport App from './TaskApp'\nimport Api from './Api'\nimport './index.css';\n\n\nclass MainApp extends Component {\n    initialState = {\n        incomplete_task_count: 0,\n        complete_task_count: 0,\n    }\n    \n    state = this.initialState\n\n    render() {\n        return (\n            <div>\n                <h1 className=\"page-title\">Learning React</h1>\n\n                <div className=\"section\">\n                    <h2>ReactJs tutorial: Tic Tac Toe </h2>\n                    <Game />\n                    <hr/>\n                </div>\n\n                <div className=\"section\">\n                    <h2>ReactJs Tutorial: Tania jobs modified for tasks and added chart</h2>\n                    <App /> \n                    <hr/>\n                </div>\n\n                <div className=\"section\">\n                    <h2>ReactJs Tutorial: Wikipedia API</h2>\n                    <Api />\n                    <hr/>\n                </div>\n            </div>\n        );\n      }\n}\n\n\nReactDOM.render(\n    <MainApp />, \n    document.getElementById('root')\n);\n"],"sourceRoot":""}