{"version":3,"sources":["tictac.js","Table.js","Form.js","App.js","Api.js","Todo.js","index.js"],"names":["Square","props","className","onClick","value","Board","i","this","squares","renderSquare","React","Component","calculateWinner","lines","length","a","b","c","Game","state","history","Array","fill","xIsNext","stepNumber","slice","setState","concat","step","status","current","winner","moves","map","move","description","jumpTo","handleClick","TableHeader","TableBody","rows","taskData","row","index","title","removeTask","Table","Form","initialState","handleChange","event","target","name","submitForm","handleSubmit","htmlFor","type","id","onChange","App","tasks","filter","task","Api","data","fetch","then","result","json","entry","href","Todo","todo","completeTodo","removeTodo","style","textDecoration","isCompleted","text","TodoForm","addTodo","useState","setValue","onSubmit","e","preventDefault","TodoApp","todos","setTodos","newTodos","splice","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d88876ca.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './tictac.css';\n\n\n// class Square extends React.Component {\n//     render() {\n//         return (\n//             <button \n//                 className=\"square\"\n//                 onClick={() => this.props.onClick()}\n//             >\n//                 {this.props.value}\n//             </button>\n//         );\n//     }\n// }\n\nfunction Square(props) {\n    return (\n        <button className=\"square\" onClick={props.onClick}>\n            {props.value}\n        </button>\n    );\n}\n\nclass Board extends React.Component {\n    renderSquare(i) {\n        return (\n            <Square \n                value={this.props.squares[i]} \n                onClick={() => this.props.onClick(i)}\n            />\n        );\n    }\n\n    render() {\n        return (\n          <div>\n            <div className=\"board-row\">\n              {this.renderSquare(0)}\n              {this.renderSquare(1)}\n              {this.renderSquare(2)}\n            </div>\n            <div className=\"board-row\">\n              {this.renderSquare(3)}\n              {this.renderSquare(4)}\n              {this.renderSquare(5)}\n            </div>\n            <div className=\"board-row\">\n              {this.renderSquare(6)}\n              {this.renderSquare(7)}\n              {this.renderSquare(8)}\n            </div>\n          </div>\n        );\n    }\n}\n\nclass Game extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            history: [{\n                squares: Array(9).fill(null),\n            }],\n            xIsNext: true,\n            stepNumber: 0,\n        };\n    }\n\n    handleClick(i) {\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\n        const current = history[history.length - 1];\n        const squares = current.squares.slice();\n        if (calculateWinner(squares) || squares[i]) {\n            return;\n        }\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\n        this.setState({\n            history: history.concat([{squares: squares}]),\n            xIsNext: !this.state.xIsNext,\n            stepNumber: history.length,\n        });\n    }\n\n    jumpTo(step) {\n        this.setState({\n            stepNumber: step,\n            xIsNext: (step % 2) === 0,\n        })\n    }\n\n    render() {\n        const history = this.state.history;\n        const current = history[this.state.stepNumber];\n        const winner = calculateWinner(current.squares);\n\n        const moves = history.map((step, move) => {\n            const description = move ?\n                'Go to move #' + move :\n                'Go to game start';\n            return (\n                <li key={move}>\n                    <button onClick={() => this.jumpTo(move)}>{description}</button>\n                </li>\n            )\n        });\n\n        let status;\n        if (winner) {\n            status = 'Winner ' + winner;\n        } else {\n            status = 'Next player: ' + (this.state.xIsNext ? 'X': 'O');\n        }\n        return (\n            <div className=\"game\">\n                <div className=\"game-board\">\n                    <Board \n                        squares={current.squares}\n                        onClick={(i) => this.handleClick(i)}\n                    />\n                </div>\n                <div className=\"game-info\">\n                    <div>{status}</div>\n                    <ol>{moves}</ol>\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n\nexport default Game\n","import React, {Component} from 'react'\nimport './table.css';\n\n\nconst TableHeader = () => {\n    return (\n      <thead>\n        <tr>\n          <th>Title</th>\n          <th>Description</th>\n        </tr>\n      </thead>\n    )\n}\n\nconst TableBody = (props) => {\n    const rows = props.taskData.map((row, index) => {\n    return (\n        <tr key={index}>\n          <td>{row.title}</td>\n          <td>{row.description}</td>\n          <td>\n              <button onClick={() => props.removeTask(index)}>Delete</button>\n          </td>\n        </tr>\n      )\n    })\n    return (\n      <tbody>{rows}</tbody>\n    )\n}\n\nconst Table = (props) =>  {\n    const {taskData, removeTask} = props\n\n    if (taskData.length == 0) {\n        return (\n            <div className=\"table-container\">\n                <h2>No tasks yet</h2>\n                <h4>Add first task</h4>\n            </div>\n        )\n    }\n    return (\n        <div className=\"table-container\">\n          <table>\n            <TableHeader />\n            <TableBody\n                taskData={taskData}\n                removeTask={removeTask}\n            />\n          </table>\n        </div>\n    )\n}\n\nexport default Table\n","import React, {Component} from 'react'\n\n\nclass Form extends Component {\n    initialState = {\n      title: '',\n      description: '',\n    }\n    \n    state = this.initialState\n\n    handleChange = (event) => {\n      const {name, value} = event.target\n      this.setState({\n        [name]: value,\n      })\n    }\n\n    submitForm = () => {\n      this.props.handleSubmit(this.state)\n      this.setState(this.initialState)\n    }\n\n    render() {\n      const { title, description } = this.state;\n    \n      return (\n        <div className=\"form-container\">\n            <h2>Add Task</h2>\n            <form>\n                <label htmlFor=\"title\">Title</label>\n                <br />\n                <input\n                  type=\"text\"\n                  name=\"title\"\n                  id=\"title\"\n                  value={title}\n                  onChange={this.handleChange} />\n                <br />\n                <br />\n                <label htmlFor=\"description\">Description</label>\n                <br />\n                <input\n                  type=\"text\"\n                  name=\"description\"\n                  id=\"description\"\n                  value={description}\n                  onChange={this.handleChange} />\n\n                <br />\n                <br />\n                <input type=\"button\" value=\"Submit\" onClick={this.submitForm} />\n            </form>\n        </div>\n      );\n    }\n}\n\nexport default Form;","import React, {Component} from 'react';\nimport Table from './Table'\nimport Form from './Form'\nimport './app.css';\n\n\nclass App extends React.Component {\n    state = {\n        tasks: [],\n    }\n\n    removeTask =(index) => {\n        const {tasks} = this.state\n\n        this.setState({\n            tasks: tasks.filter((task, i) => {\n                return i !== index\n            }),\n        })\n    }\n\n    handleSubmit = (task) => {\n        this.setState({tasks: [...this.state.tasks, task]})\n    }\n\n    render() {\n        return (\n\n            <div className=\"container\">\n                <Form handleSubmit={this.handleSubmit} />\n                <Table\n                    taskData={this.state.tasks}\n                    removeTask={this.removeTask}\n                />\n            </div>\n        )\n    }\n}\n\nexport default App\n","import React, {Component} from 'react'\n\nclass Api extends Component {\n  state = {\n    data: [],\n  }\n\n  // Code is invoked after the component is mounted/inserted into the DOM tree.\n  componentDidMount() {\n    const url =\n      'https://en.wikipedia.org/w/api.php?action=opensearch&search=reactjs&format=json&origin=*'\n\n    fetch(url)\n      .then((result) => result.json())\n      .then((result) => {\n        this.setState({\n          data: result,\n        })\n      })\n  }\n\n  render() {\n    const {data} = this.state\n\n    const result = data.map((entry, index) => {\n      return <li key={index}><a href=\"{entry}\">{entry}</a></li>\n    })\n\n    return <ul>{result}</ul>\n  }\n}\n\nexport default Api\n","import React from \"react\";\nimport \"./Todo.css\";\n\nfunction Todo({ todo, index, completeTodo, removeTodo }) {\n  return (\n    <div\n      className=\"todo\"\n      style={{ textDecoration: todo.isCompleted ? \"line-through\" : \"\" }}\n    >\n      {todo.text}\n      <div>\n        <button onClick={() => completeTodo(index)}>Complete</button>\n        <button onClick={() => removeTodo(index)}>x</button>\n      </div>\n    </div>\n  );\n}\n\nfunction TodoForm({ addTodo }) {\n  const [value, setValue] = React.useState(\"\");\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!value) return;\n    addTodo(value);\n    setValue(\"\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        className=\"input\"\n        value={value}\n        onChange={e => setValue(e.target.value)}\n      />\n    </form>\n  );\n}\n\nfunction TodoApp() {\n  const [todos, setTodos] = React.useState([\n    {\n      text: \"Learn about React\",\n      isCompleted: false\n    },\n    {\n      text: \"Meet friend for lunch\",\n      isCompleted: false\n    },\n    {\n      text: \"Build really cool todo app\",\n      isCompleted: false\n    }\n  ]);\n\n  const addTodo = text => {\n    const newTodos = [...todos, { text }];\n    setTodos(newTodos);\n  };\n\n  const completeTodo = index => {\n    const newTodos = [...todos];\n    newTodos[index].isCompleted = true;\n    setTodos(newTodos);\n  };\n\n  const removeTodo = index => {\n    const newTodos = [...todos];\n    newTodos.splice(index, 1);\n    setTodos(newTodos);\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"todo-list\">\n        {todos.map((todo, index) => (\n          <Todo\n            key={index}\n            index={index}\n            todo={todo}\n            completeTodo={completeTodo}\n            removeTodo={removeTodo}\n          />\n        ))}\n        <TodoForm addTodo={addTodo} />\n      </div>\n    </div>\n  );\n}\n\nexport default TodoApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './tictac.js';\nimport Game from './tictac'\nimport App from './App'\nimport Api from './Api'\nimport TodoApp from './Todo'\nimport './index.css';\n\n\nReactDOM.render(\n    <div>\n        <h1 className=\"page-title\">Learning React</h1>\n\n        <div className=\"section\">\n            <h2>ReactJs tutorial: Tic Tac Toe </h2>\n            <Game />\n            <hr/>\n        </div>\n\n        <div className=\"section\">\n            <h2>ReactJs Tutorial: Tania jobs</h2>\n            <App /> \n            <hr/>\n        </div>\n\n        <div className=\"section\">\n            <h2>ReactJs Tutorial: Wikipedia API</h2>\n            <Api />\n            <hr/>\n        </div>\n\n        <div className=\"section\">\n            <h2>ReactJs Tutorial: DigitalOcean Todo</h2>\n            <TodoApp />\n            <hr/>\n        </div>\n    </div>, \n    document.getElementById('root')\n);\n"],"sourceRoot":""}